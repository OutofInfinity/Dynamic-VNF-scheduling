

# number of time slots
import random
import numpy as np

T = 100
# burst
# list_a = [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#           5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#           3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#           6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#           4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
#
# list_b = [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#           4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#           5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#           5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#           6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
#
# list_c = [5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#           4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#           3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#           7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#           5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

# poisson
list_a = [0, 1, 1, 0, 0, 0, 2, 1, 0, 3, 0, 0, 3, 0, 3, 1, 0, 1, 0, 0, 0, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 2, 1, 0, 1, 0, 2, 2, 0, 2, 3, 0, 0, 0, 0, 1, 0, 3, 3, 1, 0, 2, 1, 1, 0, 0, 1, 3, 2, 1, 2, 1, 0, 0, 1, 2, 0, 2, 2, 1, 1, 0, 1, 1, 1, 2, 3, 1, 2, 1, 0, 0, 3, 0, 0, 2, 0, 2, 0, 1, 3]
list_b = [0, 2, 0, 0, 1, 0, 1, 2, 2, 5, 3, 0, 0, 0, 1, 1, 2, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 0, 1, 1, 0, 3, 0, 1, 1, 0, 0, 0, 1, 0, 1, 2, 0, 0, 1, 2, 0, 0, 2, 2, 0, 4, 1, 1, 1, 1, 0, 1, 1, 2, 0, 3, 0, 0, 0, 1, 1, 1, 1, 2, 1, 0, 0, 2, 2, 0, 0, 4, 2, 4, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 3, 1, 1, 1]
list_c = [1, 1, 2, 1, 0, 2, 1, 1, 3, 0, 1, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 3, 0, 0, 1, 2, 3, 1, 1, 0, 0, 0, 1, 0, 2, 2, 0, 0, 1, 5, 1, 0, 0, 2, 3, 0, 4, 1, 0, 0, 3, 0, 1, 2, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 0, 0, 0, 1, 3, 0, 0, 2, 0, 1, 3, 1, 0, 2, 1, 2, 3, 0, 0, 3, 0, 1, 0, 1, 2, 1, 3, 1, 1]

# list_a = list(np.random.poisson(1, T))
# list_b = list(np.random.poisson(1, T))
# list_c = list(np.random.poisson(1, T))
# print('a', list_a)
# print('b', list_b)
# print('c', list_c)

rNum = 0
# number of requests
for i in range(T):
    rNum += list_a[i]
    rNum += list_b[i]
    rNum += list_c[i]
R = rNum
# number of nodes
N = 4
# maximum processing time
P_T = 3
# maximum number of VNFs
S = 3
# server handle capacity
rSize = 10

V = 5

# requests DPI, FW, NAT, QoS, LB
# [1, 2, 0], [2, 1, 1], [3, 2, 2], [4, 4, 3], [3, 3, 4]
r = []
for i in range(T):
    for j in range(list_a[i]):
        r.append([[1, 2, 0], [2, 1, 1], [3, 2, 2]])
    for j in range(list_b[i]):
        r.append([[2, 1, 1], [3, 3, 4]])
    for j in range(list_c[i]):
        r.append([[4, 4, 3], [3, 3, 4], [1, 2, 0]])


# poisson distribution
# list_b = []
# list_s1 = np.random.poisson(1, T)
# list_s2 = np.random.poisson(2, T)
# list_s3 = np.random.poisson(3, T)
# for i in range(T):
#     list_b.append(list_s1[i] + list_s2[i] + list_s3[i])

# service = []
# for i in range(3):
#     service_temp = []
#     vNum = random.randint(1, S)
#     for j in range(vNum):
#         VNF = [node, process]
#         node = random.randint(1, N)
#         process = random.randint(1, P_T)
#         service_temp.append(VNF)
#     service.append(service_temp)


# arrival time
list_temp = []
for i in range(T):
    list_temp.append(list_a[i] + list_b[i] + list_c[i])
arr = []
j = 0
for k in range(R):
    for j in range(T):
        if list_temp[j] > 0:
            break
    list_temp[j] -= 1
    arr.append(j + 1)

# total processing time
process_t = []
for i in range(R):
    sum_temp = 0
    for j in range(len(r[i])):
        sum_temp += r[i][j][1]
    process_t.append(sum_temp)

# delay constraints

# burst
# d = [10, 16, 12, 11, 13, 8, 7, 19, 18, 19, 11, 16, 27, 36, 30, 31, 27, 32, 25, 32, 29, 33, 35, 33, 37, 56, 50, 54, 53,
#      49, 49, 45, 50, 51, 59, 60, 74, 73, 67, 72, 72, 72, 74, 74, 74, 69, 68, 73, 78, 73, 78, 78, 79, 71, 93, 91, 95,
#      87, 95, 85, 90, 91, 91, 85, 94, 92, 95, 99, 100]

# poisson
d = [13, 17, 6, 16, 15, 9, 20, 14, 23, 14, 19, 15, 20, 22, 20, 26, 17, 15, 16, 26, 15, 13, 22, 26, 19, 17, 24, 15, 16, 18, 20, 18, 20, 22, 24, 15, 22, 28, 28, 19, 23, 29, 28, 26, 22, 21, 21, 24, 25, 27, 25, 33, 22, 24, 30, 26, 29, 30, 30, 29, 31, 29, 31, 29, 39, 38, 41, 35, 35, 32, 35, 32, 39, 32, 45, 35, 39, 40, 41, 38, 39, 49, 46, 41, 43, 50, 41, 40, 49, 50, 48, 44, 46, 49, 47, 50, 42, 48, 50, 57, 57, 57, 53, 51, 49, 54, 47, 55, 59, 58, 54, 59, 54, 49, 59, 54, 60, 51, 56, 59, 60, 63, 65, 53, 58, 66, 60, 66, 59, 54, 55, 57, 65, 65, 68, 62, 65, 59, 65, 59, 66, 73, 66, 64, 63, 67, 62, 63, 66, 74, 66, 71, 64, 68, 73, 73, 68, 66, 69, 63, 71, 69, 71, 64, 74, 71, 73, 75, 73, 80, 68, 76, 74, 73, 73, 79, 75, 70, 78, 81, 74, 82, 73, 74, 72, 74, 78, 86, 76, 82, 88, 85, 75, 86, 86, 85, 76, 79, 84, 83, 85, 82, 87, 93, 84, 82, 92, 93, 86, 92, 83, 87, 90, 88, 90, 93, 90, 91, 90, 91, 90, 86, 92, 90, 92, 101, 98, 88, 95, 99, 89, 89, 89, 88, 100, 91, 96, 96, 101, 95, 95, 98, 98, 91, 100, 98, 93, 101, 95, 101, 101, 103, 100, 107, 104, 104, 101, 99, 105, 104, 101, 101, 101, 105, 97, 103, 110, 105, 110, 100, 106, 112, 113, 102, 110, 110, 106, 111, 112, 109, 112, 111, 109, 110, 112, 109, 110, 107, 105, 111, 113]

# d = []
# for i in range(R):
#     minpro = arr[i] + process_t[i]
#     delay = random.randint(minpro, minpro+10)
#     d.append(delay)
# print('d', d)
